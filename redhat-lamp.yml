---
- hosts: all
  connection: ssh
  gather_facts: yes
  become: yes
  vars:
    ssh_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
  tasks:
    # - name: Capture all vars on localhost
    #   set_fact:
    #     all_vars: "{{ hostvars[inventory_hostname] }}"
    # Dynamically add a new host (where the agent will be installed) to the inventory
    - ansible.builtin.add_host:
        name: "{{ hostname_to_deploy_to }}"
        groups: lamp_install
      changed_when: false
    # The dynamic host as now been created. Pass the required variables to the new remote host.
    # - name: Set facts if they are defined
    #   ansible.builtin.set_fact:
    #     var_name_to_pass: "{{ var_name_to_pass | default(omit) }}"
    #   delegate_to: "{{ item }}"
    #   delegate_facts: true
    #   loop: "{{ groups['lamp_install'] }}"

- name: Install LAMP Stack
  hosts: lamp_install
  # Required in this play to get the ansible_os_family fact to determine the right package manager
  gather_facts: yes
  vars:
    ansible_user: "{{ user }}"
    ansible_ssh_pass: "{{ password }}"
    # ansible_become_pass: "{{ password }}" uncomment if not using root user
  tasks:
    # - name: Install EPEL Repo
    #   dnf:
    #     name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
    #     state: present
    # bypass error 'Failed to validate GPG signature for epel-release-8-19.el8.noarch' only for testing
    # disable_gpg_check: yes

    - name: Install Apache
      yum:
        name: httpd
        state: present

    - name: Enable and start Apache service
      systemd:
        name: httpd
        enabled: yes
        state: started

    - name: Install MySQL
      yum:
        name: "@mysql"
        state: present

    - name: Enable and start MySQL service
      systemd:
        name: mysqld
        enabled: yes
        state: started

    - name: Install PHP
      yum:
        name:
          - php
          - php-mysqlnd
          - php-cli
        state: present

    - name: Create styled Hello World index.php
      copy:
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Hello World!</title>
              <style>
                  body {
                      font-size: 72px;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      height: 100vh;
                  }
              </style>
          </head>
          <body>
              Hello, World!
          </body>
          </html>
        dest: /var/www/html/index.php

    - name: Update DirectoryIndex to prioritise index.php
      ansible.builtin.lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: "^DirectoryIndex"
        line: "    DirectoryIndex index.php index.html"

    - name: Restart Apache
      service:
        name: httpd
        state: restarted
